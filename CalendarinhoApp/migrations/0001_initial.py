# Generated by Django 3.1.4 on 2021-02-15 11:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CliName', models.CharField(max_length=200, verbose_name='Client Name')),
                ('CliShort', models.CharField(max_length=10, verbose_name='Acronym')),
                ('CliCode', models.CharField(default='9999', max_length=4)),
            ],
            options={
                'ordering': ['CliName'],
            },
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('OTP', models.CharField(default='999999', max_length=6)),
                ('Email', models.CharField(max_length=50)),
                ('Timestamp', models.DateTimeField(auto_now_add=True)),
                ('Tries', models.CharField(default='0', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serviceName', models.CharField(max_length=200, verbose_name='Service Name')),
                ('serviceShort', models.CharField(max_length=10, verbose_name='Service Shortname')),
            ],
        ),
        migrations.CreateModel(
            name='Leave',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Note', models.CharField(max_length=200)),
                ('StartDate', models.DateField(verbose_name='Start Date')),
                ('EndDate', models.DateField(verbose_name='End Date')),
                ('LeaveType', models.CharField(choices=[('Training', 'Training'), ('Vacation', 'Vacation')], default='Vacation', max_length=8, verbose_name='Leave Type')),
                ('emp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Employee Name')),
            ],
        ),
        migrations.CreateModel(
            name='Engagement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('EngName', models.CharField(max_length=200, verbose_name='Engagement Name')),
                ('StartDate', models.DateField(verbose_name='Start Date')),
                ('EndDate', models.DateField(verbose_name='End Date')),
                ('Scope', models.TextField(help_text='Enter one domain/IP per line', verbose_name='Scope')),
                ('CliName', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CalendarinhoApp.client', verbose_name='Client Name')),
                ('Employees', models.ManyToManyField(blank=True, related_name='Engagements', to=settings.AUTH_USER_MODEL)),
                ('ServiceType', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CalendarinhoApp.service', verbose_name='Service Type')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('eng', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='CalendarinhoApp.engagement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, to_field='username')),
            ],
            options={
                'ordering': ['created_on'],
            },
        ),
    ]
